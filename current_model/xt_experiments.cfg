# This is the config file for the Xu & Tenenbaum generalisation probability experiments.

[DEFAULT]
path = ./results_to_discard
learner-path = 'tmpfile_learner_10000_epsilon_0.01.pkl'
new-learner = True

repetitions = 1
iterations = 1

lexname = norm_prob_lexicon_cs.all
maxtime = 10000 # the number of sentences the learner is exposed to prior

# config file parameters
beta =                              [10000]
epsilon =                           [0.01]
alpha =                             [20]

dummy =                             [False]
forget =                            [False]
novelty =                           [False]

power =                             [1]
#power = 1 is ND; power = 0.5 is LT_.5 (late talker less severe),; power = 0.25 is LT_.25 (late talker more severe)

# generation of features in the pretraining corpus
prob =                              [True]

# weighting of features in the test scene
basic-level-bias =                  [None] # relative weight factor

# ordered list of parameters with which to name and annotate the graph
graph-annotation =                  [['calculation-type', 'alpha', 'std', 'epsilon', 'normalise-over-test-scene', 'include-fep-in-loop', 'use-distribution-fep']]

corpus =                            ['generate-naturalistic']
corpus-path =                       ['input_wn_fu_cs_scaled_categ.dev']
num-features =                      [1]

normalise-over-test-scene =         [True, False]
include-fep-in-loop =               [True, False]

#[Simple corpus]

#corpus = ['generate-simple']
#hierarchy = ['xt_hierarchy_one_feature.xml']

# how many of each word in the pretraining corpus
#num-subordinate =                   [100, 500, 1000]
#num-basic-level =                   [300, 1500, 3000]
#num-superordinate =                 [900, 4500, 9000]

#[Cosine experiments]
#
#calculation-type =                  ['no-word-averaging', 'cosine-norm']
#std =                               None
#delta-interval =                    None
#use-distribution-fep =              [False]

[Gaussian experiments]

calculation-type =                  ['gaussian-norm']
std =                               [0.05, 0.075, 0.1, 0.125, 0.15, 0.2]
delta-interval =                    [0.0001]
use-distribution-fep =              [True]
